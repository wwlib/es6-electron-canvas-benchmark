{"version":3,"sources":["game/bouncingObject.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;4BAIyB,gBAAgB;;;;4BAChB,gBAAgB;;;;IAEnC,cAAc;AAEL,aAFT,cAAc,CAEJ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;8BAFtD,cAAc;;AAGZ,YAAI,CAAC,QAAQ,EAAE;AACX,oBAAQ,GAAG,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC;SAC/B;AACD,mCANF,cAAc,6CAMN,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE;AAC9B,YAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;AACxB,YAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;KAE3B;;cAVC,cAAc;;iBAAd,cAAc;;eAYV,gBAAC,SAAS,EAAE;;AAEd,gBAAI,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;AACtC,gBAAI,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;;AAEtC,gBAAI,OAAO,GAAG,AAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAI,MAAM,CAAC;;AAE9D,gBAAI,SAAS,GAAG,CAAC,CAAC;AAClB,gBAAI,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5D,gBAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AACvC,gBAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;;AAE1C,gBAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC;AAC/C,gBAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,OAAO,CAAC;SACjD;;;eAEE,eAAG;AACF,sCAAa,sBAAsB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACpD,uCA9BF,cAAc,qCA8BA;SACf;;;WA/BC,cAAc;;;qBAkCL,cAAc","file":"game/bouncingObject.js","sourcesContent":["/**\n * Created by andrew on 3/28/15.\n */\n\nimport MovingObject from './movingObject';\nimport SoundManager from './soundManager';\n\nclass BouncingObject extends MovingObject {\n\n    constructor(sprite, x, y, velocity, x_period, y_period) {\n        if (!velocity) {\n            velocity = {\"x\": 1, \"y\": 0};\n        }\n        super(sprite, x, y, velocity);\n        this.xPeriod = x_period; //milliseconds\n        this.yPeriod = y_period; //milliseconds\n\n    }\n\n    update(timestamp) {\n\n        var yPhase = timestamp % this.yPeriod;\n        var xPhase = timestamp % this.xPeriod;\n\n        var xOffset = (this.boundsRect.width / this.xPeriod) * xPhase;\n\n        var frequency = 1;\n        var angle = yPhase / this.yPeriod * frequency * Math.PI * 2;\n        var amplitude = this.boundsRect.height;\n        var yOffset = Math.sin(angle) * amplitude;\n\n        this.coords.x = this.boundsRect.left + xOffset;\n        this.coords.y = this.boundsRect.top + yOffset;\n    }\n\n    die() {\n        SoundManager.playSoundWithIdAndTime(\"explosion\", 0);\n        super.die();\n    }\n}\n\nexport default BouncingObject;\n"],"sourceRoot":"/source/"}