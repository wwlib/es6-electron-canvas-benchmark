{"version":3,"sources":["main-sukin-sprite.js"],"names":[],"mappings":"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","file":"main-sukin-sprite.js","sourcesContent":["// Isaac Sukin\n// http://www.isaacsukin.com/news/2015/01/detailed-explanation-javascript-game-loops-and-timing\n\n// Sprite classes: <andrew@worthwhilegames.org> (http://worthwhilegames.org)\n\nimport Sprite from './game/sprite';\nimport MovingObject from './game/movingObject';\nimport Rect from './game/rect';\nimport config from '../config-sukin';\n\nlet canvas = document.getElementById(\"benchmark-canvas\");\nlet canvasContext = canvas.getContext(\"2d\");\nlet crystalSprite = new Sprite(\"crystal\", null, 20, 20);\ncrystalSprite.load(\"./images/crystal.png\", onSpriteReady);\n\nlet movingObjects = [];\nlet testEnded = false;\nlet testSpritesIncrement = config.testSpritesIncrement;\nlet maxRenderedSprites = config.maxRenderedSprites;\nlet testIterationInterval = config.testIterationInterval;\nlet clearCanvasPerFrame = config.clearCanvasPerFrame;\nlet clearSpritePerFrame = config.clearSpritePerFrame;\nlet useSetTimeout = config.useSetTimeout;\nlet throttleFramerate = config.throttleFramerate;\nlet maxFPS = config.maxFPS;\nlet testIteration = 0;\nlet testIterationElapsedTime = null;\nlet testSpritesCount = testSpritesIncrement;\nlet score = 0;\n\nvar box = document.getElementById('box'),\n    fpsDisplayGame = document.getElementById('fpsDisplayGame'),\n    fpsDisplaySystem = document.getElementById('fpsDisplaySystem'),\n    boxPos = 10,\n    boxLastPos = 10,\n    boxVelocity = 0.08,\n    limit = 300,\n    lastFrameTimeMs = 0,\n    //maxFPS = 60,\n    delta = 0,\n    timestep = 1000 / maxFPS,\n    gameFPS = maxFPS,\n    systemFPS = maxFPS,\n    gameFramesThisSecond = 0,\n    systemFramesThisSecond = 0,\n    lastFpsUpdate = 0;\n\n//box.style.top = '100px';\n\nfunction update(delta) {\n    boxLastPos = boxPos;\n    boxPos += boxVelocity * delta;\n    // Switch directions if we go too far\n    if (boxPos >= limit || boxPos <= 0) boxVelocity = -boxVelocity;\n\n\n    for (let i=0; i < maxRenderedSprites; i++) {\n        let obj = movingObjects[i];\n        obj.update(delta);\n        if (!obj.inBounds) {\n            obj.coords.x = obj.bounds.left;\n            obj.coordsPrev.x = obj.bounds.left;\n        }\n    }\n}\n\nfunction draw(interp) {\n\n    if (clearCanvasPerFrame) {\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n    }\n\n    //box.style.left = (boxLastPos + (boxPos - boxLastPos) * interp) + 'px';\n\n    //canvasContext.clearRect(crystalSprite.x, crystalSprite.y, crystalSprite.width, crystalSprite.height);\n    //crystalSprite.x = (boxLastPos + (boxPos - boxLastPos) * interp);\n    //crystalSprite.draw(canvasContext);\n\n    for (let i=0; i < maxRenderedSprites; i++) {\n        let obj = movingObjects[i];\n        //obj.coords.x = (boxLastPos + (boxPos - boxLastPos) * interp);\n        if (clearSpritePerFrame) {\n            canvasContext.clearRect(obj.coordsPrev.x, obj.coordsPrev.y, obj.width, obj.height);\n        }\n        obj.draw(canvasContext, interp);\n    }\n\n    fpsDisplayGame.textContent = Math.round(gameFPS) + ' gameFPS';\n    fpsDisplaySystem.textContent = Math.round(systemFPS) + ' systemFPS';\n}\n\nfunction panic() {\n    delta = 0;\n    console.log(`Panic.`);\n}\n\nfunction begin() {\n}\n\nfunction end(gameFPS) {\n    if (gameFPS < 25) {\n        box.style.backgroundColor = 'red';\n    }\n    else if (gameFPS > 30) {\n        box.style.backgroundColor = 'forestgreen';\n    }\n}\n\nfunction mainLoop(timestamp) {\n    if (!timestamp) {\n        timestamp = Date.now();\n    }\n    systemFramesThisSecond++;\n    // Throttle the frame rate.    \n    if (throttleFramerate && timestamp < lastFrameTimeMs + (timestep)) {\n        if (useSetTimeout) {\n            setTimeout(mainLoop, 1);\n        } else {\n            window.requestAnimationFrame(mainLoop);\n        }\n        //console.log(`Throttling.`);\n        return;\n    }\n    gameFramesThisSecond++;\n\n    delta += timestamp - lastFrameTimeMs;\n    lastFrameTimeMs = timestamp;\n\n    begin(timestamp, delta);\n\n    if (timestamp > lastFpsUpdate + 1000) {\n        gameFPS = 0.25 * gameFramesThisSecond + 0.75 * gameFPS;\n        systemFPS = 0.25 * systemFramesThisSecond + 0.75 * systemFPS;\n\n\n        lastFpsUpdate = timestamp;\n        gameFramesThisSecond = 0;\n        systemFramesThisSecond = 0;\n    }\n\n    var numUpdateSteps = 0;\n    while (delta >= timestep) {\n        update(timestep);\n        delta -= timestep;\n        if (++numUpdateSteps >= 240) {\n            panic();\n            break;\n        }\n    }\n\n    draw(delta / timestep);\n\n    end(gameFPS);\n\n    if (useSetTimeout) {\n        setTimeout(mainLoop, 1);\n    } else {\n        window.requestAnimationFrame(mainLoop);\n    }\n}\n\n\nfunction onSpriteReady(sprite) {\n    console.log(\"onSpriteReady: \" + sprite.id);\n    for (let i=0; i< maxRenderedSprites; i++) {\n        let random_x = Math.floor(Math.random() * 1280);\n        let random_y = Math.floor(Math.random() * 720);\n        let random_velocity = 0.08; //pixels per timestep\n        let moving_object = new MovingObject(crystalSprite, random_x, random_y, {x: random_velocity, y: 0});\n        moving_object.boundsRect = new Rect({top: 0, left: -40, width: 1320, height: 680});\n        movingObjects.push(moving_object);\n    }\n\n\n    if (useSetTimeout) {\n        setTimeout(mainLoop, 1);\n    } else {\n        window.requestAnimationFrame(mainLoop);\n    }\n}\n"],"sourceRoot":"/source/"}